# Dockerfile

# Шаг 1: Используем официальный образ Python как базовый
# 'slim' версия меньше по размеру и содержит все необходимое
FROM python:3.11-slim

# Шаг 2: Устанавливаем рабочую директорию внутри контейнера
# Все последующие команды будут выполняться в этой папке
WORKDIR /app

# Шаг 3: Копируем файл с зависимостями
# Мы делаем это отдельно, чтобы использовать кэширование Docker.
# Если requirements.txt не меняется, Docker не будет переустанавливать зависимости при каждой сборке.
COPY requirements.txt ./

# Шаг 4: Устанавливаем зависимости
# --no-cache-dir уменьшает размер итогового образа
RUN pip install --no-cache-dir -r requirements.txt

# Шаг 5: Копируем все остальные файлы проекта в рабочую директорию
# (Python-скрипты, папку с демо-файлами и т.д.)
COPY . .

# Шаг 6: Указываем порт, который будет слушать приложение Streamlit
# Это стандартный порт для Streamlit
EXPOSE 8501

# Шаг 7: Команда для запуска приложения при старте контейнера
# --server.address=0.0.0.0 делает приложение доступным извне контейнера
CMD ["streamlit", "run", "app.py", "--server.address=0.0.0.0"]